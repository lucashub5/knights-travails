(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();const e=t.p+"68f184fe520f63d62050.svg";class n{constructor(t){this.size=t,this.board=this.setBoard(),this.moves=[[-2,-1],[-2,1],[-1,-2],[-1,2],[1,-2],[1,2],[2,-1],[2,1]]}setBoard(){return Array.from({length:this.size},(()=>Array(this.size).fill(null)))}knightMoves(t,e){const n=new o(t);let r=[n.value],s=[];return this.recursiveF(t,e,n,r,s),s}recursiveF(t,e,n,r,s){if(t===e)return;let i=[n];for(;i.length>0;){const n=i.shift();if(0===s.length||n.depth<s[0].length-1){const[l,c]=n.value;this.moves.map((t=>[l+t[0],c+t[1]])).forEach((l=>{const[c,a]=l,[h,u]=e,d=c>=0&&c<this.size&&a>=0&&a<this.size,p=r.some((([t,e])=>t===c&&e===a)),g=new o([c,a],n,n.depth+1);if(c!==h||a!==u)d&&!p&&(n.conns.push(g),r.push(g.value),i.push(g));else{if(s[0]&&s[0].length<3)return;s.push(this.getPath(g));const n=new o(t);i=[n],r=[];for(let t=0;t<s.length;t++)for(let e=0;e<s[t].length;e++)r.push(s[t][e]);this.recursiveF(t,e,n,r,s)}}))}}}printPaths(t){const e=t.length,n=t[0].length-1;console.log(`> knightMoves([${t[0][0]}], [${t[0][t[0].length-1]}])\n        => You made it in ${n} moves! Found ${e} solution${e>1?"s":""}. Here are your paths:`),t.forEach(((t,e)=>{console.log(`         path ${e+1}: ${JSON.stringify(t)}`)}))}getPath(t){const e=[];for(;null!==t;)e.push(t.value),t=t.parent;return e.reverse()}}class o{constructor(t,e=null,n=0){this.value=t,this.parent=e,this.conns=[],this.depth=n}}const r=document.querySelector(".output"),s=document.getElementById("bar"),i=document.getElementById("sizeLabel"),l=document.getElementById("guide-user");let c=!1;const a=[];let h=s.value;const u=document.getElementById("btn");function d(){l.textContent="Select a position for the knight.",c=!1,u.style.display="none",h=s.value,i.textContent=`Size: ${h}x${h}`;const t=document.createElement("div");t.classList.add("custom-grid"),document.documentElement.style.setProperty("--grid-size",h);for(let e=0;e<h;e++)for(let n=0;n<h;n++){const o=document.createElement("div");o.classList.add("lockers"),o.style.backgroundColor=(n-e)%2!=0?"rgb(187, 187, 187)":"rgb(137, 137, 137)";const r=`[${n},${h-1-e}]`;o.setAttribute("position",r),t.appendChild(o),o.addEventListener("click",p)}r.innerHTML="",r.appendChild(t)}function p(t){const o=t.currentTarget,r=document.createElement("div");if(r.id="position-horse",c)o.appendChild(r),a[1]=JSON.parse(o.getAttribute("position")),function(){const t=new n(h).knightMoves(a[0],a[1]);for(let e=0;e<t.length;e++){const n=`rgb(${Math.floor(128*Math.random())}, ${Math.floor(128*Math.random())}, ${Math.floor(128*Math.random())})`;for(let o=1;o<t[e].length-1;o++){const r=document.querySelector(`[position="[${t[e][o]}]"]`),s=document.createElement("div");s.classList.add("paint-path"),s.style.backgroundColor=n,s.style.setProperty("--font-size",300/h*.8+"px"),s.textContent=o,s.addEventListener("mouseover",(function(t){const e=t.target.dataset.hoverPath;document.querySelectorAll(".paint-path").forEach((t=>{const n=t.dataset.hoverPath;e!==n?t.style.display="none":t.style.color="white"}))})),s.addEventListener("mouseout",(function(){document.querySelectorAll(".paint-path").forEach((t=>{t.style.display="block",t.style.color="transparent"}))})),document.querySelectorAll(".lockers").forEach((t=>{t.removeEventListener("click",p)})),s.dataset.hoverPath=e,u.style.display="block",r.appendChild(s)}}}(),l.textContent="These are the results.";else{const t=document.createElement("img");t.src=e,t.alt="Horse",r.appendChild(t),o.innerHTML="",o.appendChild(r),l.textContent="Select the final position.",c=!0,a[0]=JSON.parse(o.getAttribute("position"))}}u.addEventListener("click",d),s.addEventListener("input",d),d()})();